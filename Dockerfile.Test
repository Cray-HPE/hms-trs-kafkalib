# MIT License
#
# (C) Copyright [2020-2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Dockerfile for building HMS TRS Kafka Library test app
# Author: mpkelly
# Date: 08-January 2020

# Build base has the packages installed that we need.
FROM artifactory.algol60.net/docker.io/library/golang:1.16-alpine AS build-base

RUN set -ex \
    && apk -U upgrade \
    && apk add build-base git

# Copy all the necessary files to the image.
FROM build-base AS base

RUN go env -w GO111MODULE=auto

COPY Test $GOPATH/src/github.com/Cray-HPE/hms-trs-kafkalib/Test
COPY pkg $GOPATH/src/github.com/Cray-HPE/hms-trs-kafkalib/v2/pkg
COPY vendor $GOPATH/src/github.com/Cray-HPE/hms-trs-kafkalib/vendor

### Build Stage ###

FROM base AS builder

# Now build.
RUN set -ex \
    && go build -v -i -tags musl -o testApp github.com/Cray-HPE/hms-trs-kafkalib/Test

### Final Stage ###

FROM artifactory.algol60.net/docker.io/alpine:3
LABEL maintainer="Cray, Inc."
STOPSIGNAL SIGTERM

ENV PORT=27999

# Copy the final binary.
COPY --from=builder /go/testApp /usr/local/bin

# Run the test app. Env vars are retrieved from the docker-compose file.
CMD ["sh", "-c", "testApp"]
